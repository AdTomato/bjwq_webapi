<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.authine.cloudpivot.web.api.mapper.AddEmployeeMapper">
    <select id="getEmployeeOrderFormById" resultType="com.authine.cloudpivot.web.api.entity.EmployeeOrderForm">
        SELECT *
        FROM i4fvb_employee_order_form
        WHERE id = #{id}
    </select>

    <select id="getHsLevyHandler" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT handler
        FROM id34a_hs_levy
        WHERE welfare_handler = #{welfareHandler}
        <if test="welfareHandler == '单立户'">
            AND client_name like concat('%',#{clientName},'%')
        </if>
        AND business_type like concat('%',#{businessType},'%')
        AND parentId IN (SELECT id FROM id34a_handler_set WHERE city = #{city})
        LIMIT 0,1
    </select>

    <select id="getAddEmployeeByClientNameAndIdCard" resultType="com.authine.cloudpivot.web.api.entity.AddEmployee">
        SELECT *
        FROM i4fvb_add_employee
        WHERE first_level_client_name = #{firstClientName}
          AND second_level_client_name = #{secondClientName}
          AND identityNo = #{identityNo}
          AND id != #{id}
    </select>

    <!--根据id,查询增员客户数据-->
    <select id="getAddEmployeeById" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.AddEmployee">
        SELECT *
        FROM i4fvb_add_employee
        WHERE id = #{id}
    </select>

    <!--根据id,查询增员上海数据-->
    <select id="getShAddEmployeeById" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.ShAddEmployee">
        SELECT *
        FROM i4fvb_sh_add_employee
        WHERE id = #{id}
    </select>

    <!--根据id,查询增员全国数据-->
    <select id="getQgAddEmployeeById" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.NationwideDispatch">
        SELECT *
        FROM i4fvb_nationwide_dispatch
        WHERE id = #{id}
    </select>

    <!--根据客户名称和证件号码获取员工档案数据-->
    <select id="getEmployeeFilesByClientNameAndIdentityNo"
            resultType="com.authine.cloudpivot.web.api.entity.EmployeeFiles">
        SELECT *
        FROM i4fvb_employee_files
        WHERE first_level_client_name = #{firstLevelClientName}
          AND second_level_client_name = #{secondLevelClientName}
          AND id_no = #{identityNo}
          AND (quit_date IS NULL OR date_format(quit_date, '%Y-%m-%d') > date_format(SYSDATE(), '%Y-%m-%d'))
        ORDER BY createdTime DESC
        LIMIT 0, 1
    </select>

    <!--增员客户修改退回原因-->
    <update id="updateReturnReason">
        UPDATE ${tableName}
        SET return_reason = #{returnReason}
        WHERE id = #{id}
    </update>

    <!--新增员工档案-->
    <insert id="addEmployeeFiles" parameterType="com.authine.cloudpivot.web.api.entity.EmployeeFiles">
        INSERT INTO i4fvb_employee_files(id, name, creater, createdDeptId, owner, ownerDeptId, createdTime, modifier,
                                         modifiedTime, workflowInstanceId, sequenceNo, sequenceStatus,
                                         ownerDeptQueryCode, employee_name, id_type, id_no, gender, birth_date,
                                         employee_nature, household_register_nature, mobile, social_security_city,
                                         provident_fund_city, report_entry_time, report_recruits, entry_time,
                                         social_security_charge_start, provident_fund_charge_start, entry_description,
                                         report_quit_date, report_severance_officer, quit_date,
                                         social_security_charge_end, provident_fund_charge_end, quit_reason,
                                         quit_remark, entry_notice, health_check, whether_pay, position, email,
                                         employee_labels, stop_generate_bill, is_old_employee, social_security_num,
                                         provident_fund_num, s_payment_application, g_payment_application,
                                         first_level_client_name, second_level_client_name, household_register_remarks,
                                         social_security_base, provident_fund_base, s_welfare_handler,
                                         g_welfare_handler, is_retired_soldier, is_poor_archivists, is_disabled,
                                         operator, inquirer, sb_add_employee_id, gjj_add_employee_id,
                                         sb_del_employee_id, gjj_del_employee_id, subordinate_department)
        VALUES (#{id}, #{name}, #{creater}, #{createdDeptId}, #{owner}, #{ownerDeptId}, #{createdTime}, #{modifier},
                #{modifiedTime}, #{workflowInstanceId}, #{sequenceNo}, #{sequenceStatus}, #{ownerDeptQueryCode},
                #{employeeName}, #{idType}, #{idNo}, #{gender}, #{birthDate}, #{employeeNature},
                #{householdRegisterNature}, #{mobile}, #{socialSecurityCity}, #{providentFundCity}, #{reportEntryTime},
                #{reportRecruits}, #{entryTime}, #{socialSecurityChargeStart}, #{providentFundChargeStart},
                #{entryDescription}, #{reportQuitDate}, #{reportSeveranceOfficer}, #{quitDate},
                #{socialSecurityChargeEnd}, #{providentFundChargeEnd}, #{quitReason}, #{quitRemark}, #{entryNotice},
                #{healthCheck}, #{whetherPay}, #{position}, #{email}, #{employeeLabels}, #{stopGenerateBill},
                #{isOldEmployee}, #{socialSecurityNum}, #{providentFundNum}, #{sPaymentApplication},
                #{gPaymentApplication}, #{firstLevelClientName}, #{secondLevelClientName}, #{householdRegisterRemarks},
                #{socialSecurityBase}, #{providentFundBase}, #{sWelfareHandler}, #{gWelfareHandler},
                #{isRetiredSoldier}, #{isPoorArchivists}, #{isDisabled}, #{operator}, #{inquirer}, #{sbAddEmployeeId},
                #{gjjAddEmployeeId}, #{sbDelEmployeeId}, #{gjjDelEmployeeId}, #{subordinateDepartment})
    </insert>

    <!--新增入职通知-->
    <insert id="addEntryNotice" parameterType="com.authine.cloudpivot.web.api.entity.EntryNotice">
        INSERT INTO i4fvb_entry_notice(id, name, creater, createdDeptId, owner, ownerDeptId, createdTime, modifier,
                                       modifiedTime, workflowInstanceId, sequenceNo, sequenceStatus, ownerDeptQueryCode,
                                       employee_name, identityNo, social_security, provident_fund, submission_method,
                                       operate_signatory, operate_sign_for, unit_provident_fund_num,
                                       personal_provident_fund_num, employment_register_num, entry_contact_remark,
                                       first_level_client_name, second_level_client_name, mobile, social_security_city,
                                       provident_fund_city, is_retired_soldier, is_disabled, is_poor_archivists,
                                       record_of_employment, feedback, status, operator, inquirer,
                                       subordinate_department)
        VALUES (#{id}, #{name}, #{creater}, #{createdDeptId}, #{owner}, #{ownerDeptId}, #{createdTime}, #{modifier},
                #{modifiedTime}, #{workflowInstanceId}, #{sequenceNo}, #{sequenceStatus}, #{ownerDeptQueryCode},
                #{employeeName}, #{identityNo}, #{socialSecurity}, #{providentFund}, #{submissionMethod},
                #{operateSignatory}, #{operateSignFor}, #{unitProvidentFundNum}, #{personalProvidentFundNum},
                #{employmentRegisterNum}, #{entryContactRemark}, #{firstLevelClientName}, #{secondLevelClientName},
                #{mobile}, #{socialSecurityCity}, #{providentFundCity}, #{isRetiredSoldier}, #{isDisabled},
                #{isPoorArchivists}, #{recordOfEmployment}, #{feedback}, #{status}, #{operator}, #{inquirer},
                #{subordinateDepartment})
    </insert>

    <!--插入社保申报数据-->
    <insert id="addSocialSecurityDeclare" parameterType="com.authine.cloudpivot.web.api.entity.SocialSecurityDeclare">
        INSERT INTO i4fvb_social_security_declare(id, name, creater, createdDeptId, owner, ownerDeptId, createdTime,
                                                  modifier, modifiedTime, workflowInstanceId, sequenceNo,
                                                  sequenceStatus, ownerDeptQueryCode, start_month, employee_name,
                                                  gender, identityNo, contract_signing_date, contract_deadline,
                                                  positive_salary, base_pay, mobile, welfare_handler, birthday,
                                                  identityNo_type, return_reason_already, operate_leader,
                                                  employee_order_form_id, status, first_level_client_name,
                                                  second_level_client_name, city, bill_year, remark, operator, inquirer,
                                                  employee_files_id, add_employee_id, subordinate_department,
                                                  employee_nature)
        VALUES (#{id}, #{name}, #{creater}, #{createdDeptId}, #{owner}, #{ownerDeptId}, #{createdTime}, #{modifier},
                #{modifiedTime}, #{workflowInstanceId}, #{sequenceNo}, #{sequenceStatus}, #{ownerDeptQueryCode},
                #{startMonth}, #{employeeName}, #{gender}, #{identityNo}, #{contractSigningDate}, #{contractDeadline},
                #{positiveSalary}, #{basePay}, #{mobile}, #{welfareHandler}, #{birthday}, #{identityNoType},
                #{returnReasonAlready}, #{operateLeader}, #{employeeOrderFormId}, #{status}, #{firstLevelClientName},
                #{secondLevelClientName}, #{city}, #{billYear}, #{remark}, #{operator}, #{inquirer}, #{employeeFilesId},
                #{addEmployeeId}, #{subordinateDepartment}, #{employeeNature})
    </insert>

    <!--插入公积金申报数据-->
    <insert id="addProvidentFundDeclare" parameterType="com.authine.cloudpivot.web.api.entity.ProvidentFundDeclare">
        INSERT INTO i4fvb_provident_fund_declare(id, name, creater, createdDeptId, owner, ownerDeptId, createdTime,
                                                 modifier, modifiedTime, workflowInstanceId, sequenceNo, sequenceStatus,
                                                 ownerDeptQueryCode, employee_name, gender, identityNo, start_month,
                                                 provident_fund_base, corporate_payment, personal_deposit,
                                                 total_deposit, welfare_handler, birthday, identityNo_type,
                                                 operate_leader, employee_order_form_id, status, return_reason_already,
                                                 first_level_client_name, second_level_client_name, city, operator,
                                                 inquirer, employee_files_id, add_employee_id, subordinate_department,
                                                 employee_nature, bill_year, company_provident_fund_bl,
                                                 employee_provident_fund_bl)
        VALUES (#{id}, #{name}, #{creater}, #{createdDeptId}, #{owner}, #{ownerDeptId}, #{createdTime}, #{modifier},
                #{modifiedTime}, #{workflowInstanceId}, #{sequenceNo}, #{sequenceStatus}, #{ownerDeptQueryCode},
                #{employeeName}, #{gender}, #{identityNo}, #{startMonth}, #{providentFundBase}, #{corporatePayment},
                #{personalDeposit}, #{totalDeposit}, #{welfareHandler}, #{birthday}, #{identityNoType},
                #{operateLeader}, #{employeeOrderFormId}, #{status}, #{returnReasonAlready}, #{firstLevelClientName},
                #{secondLevelClientName}, #{city}, #{operator}, #{inquirer}, #{employeeFilesId}, #{addEmployeeId},
                #{subordinateDepartment}, #{employeeNature}, #{billYear}, #{companyProvidentFundBl},
                #{employeeProvidentFundBl})
    </insert>

    <!--插入补缴，汇缴子表数据-->
    <insert id="createEmployeeOrderFormDetails">
        INSERT INTO ${tableName} (product_name, start_charge_time, end_charge_time, company_base, employee_base,
        company_ratio, employee_ratio, sum, company_money, employee_money, company_surcharge_value,
        employee_surcharge_value, id, parentId, sortKey) VALUES
        <foreach item="item" collection="list" index="index" separator=",">
            (#{item.productName}, #{item.startChargeTime}, #{item.endChargeTime}, #{item.companyBase},
            #{item.employeeBase}, #{item.companyRatio},
            #{item.employeeRatio}, #{item.sum}, #{item.companyMoney}, #{item.employeeMoney},
            #{item.companySurchargeValue}, #{item.employeeSurchargeValue}, #{item.id}, #{parentId}, #{item.sortKey})
        </foreach>
    </insert>

    <insert id="addEmployeeOrderFormFee">
        INSERT INTO ${tableName} (id, parentId, sortKey, product_name, start_charge_time, end_charge_time, sum) VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id},#{item.parentId},#{item.sortKey},#{item.productName},#{item.startChargeTime},#{item.endChargeTime},#{item.sum})
        </foreach>
    </insert>

    <!--插入员工订单-->
    <insert id="addEmployeeOrderForm" parameterType="com.authine.cloudpivot.web.api.entity.EmployeeOrderForm">
        INSERT INTO i4fvb_employee_order_form(id, name, creater, createdDeptId, owner, ownerDeptId, createdTime,
                                              modifier, modifiedTime, workflowInstanceId, sequenceNo, sequenceStatus,
                                              ownerDeptQueryCode, detail, social_security_status, provident_fund_status,
                                              social_security_city, provident_fund_city, employee_files_id,
                                              first_level_client_name, second_level_client_name, id_type, business_type,
                                              identityNo, s_welfare_handler, g_welfare_handler, social_security_base,
                                              provident_fund_base, social_security_charge_start,
                                              provident_fund_charge_start, precollected, pay_cycle,
                                              social_security_charge_end, provident_fund_charge_end, employee_name,
                                              sb_bill_year, gjj_bill_year)
        VALUES (#{id}, #{name}, #{creater}, #{createdDeptId}, #{owner}, #{ownerDeptId}, #{createdTime}, #{modifier},
                #{modifiedTime}, #{workflowInstanceId}, #{sequenceNo}, #{sequenceStatus}, #{ownerDeptQueryCode},
                #{detail}, #{socialSecurityStatus}, #{providentFundStatus}, #{socialSecurityCity}, #{providentFundCity},
                #{employeeFilesId}, #{firstLevelClientName}, #{secondLevelClientName}, #{idType}, #{businessType},
                #{identityNo}, #{sWelfareHandler}, #{gWelfareHandler}, #{socialSecurityBase}, #{providentFundBase},
                #{socialSecurityChargeStart}, #{providentFundChargeStart}, #{precollected}, #{payCycle},
                #{socialSecurityChargeEnd}, #{providentFundChargeEnd}, #{employeeName}, #{sbBillYear}, #{gjjBillYear})
    </insert>

    <!--查询开始时间-->
    <select id="getStartChargeTime" resultType="java.lang.Integer">
        SELECT distinct date_format(start_charge_time, '%Y%m')
        from ${tableName}
        WHERE parentId = #{parentId}
        ORDER BY start_charge_time
    </select>

    <!--查询结束时间-->
    <select id="getEndChargeTime" resultType="java.lang.Integer">
        SELECT distinct date_format(end_charge_time, '%Y%m')
        from ${tableName}
        WHERE parentId = #{parentId}
        ORDER BY end_charge_time is null, end_charge_time
    </select>

    <!--查询最大sortKey-->
    <select id="getMaxSortKey" resultType="java.lang.Double">
        SELECT MAX(sortKey)
        FROM ${tableName}
        WHERE parentId = #{parentId}
    </select>

    <select id="getSumInTimeRange" resultType="java.lang.Double">
        SELECT SUM(company_money) FROM ${tableName} WHERE parentId = #{parentId} AND date_format(start_charge_time,
        '%Y%m') <![CDATA[<=]]> #{startChargeTime}
        <if test="endChargeTime != null">
            AND (end_charge_time is null or date_format(end_charge_time, '%Y%m')>= #{endChargeTime})
        </if>
        <if test="endChargeTime == null">
            AND end_charge_time is null
        </if>
    </select>

    <delete id="delOrderFormServiceChargeUnitPrice">
        DELETE
        FROM ${tableName}
        WHERE parentId = #{parentId}
          AND product_name IN ('服务费', '增值税费', '风险管理费', '福利产品')
    </delete>


    <update id="updateEmployeeOrderFrom" parameterType="com.authine.cloudpivot.web.api.entity.EmployeeOrderForm">
        UPDATE i4fvb_employee_order_form
        SET name                         = #{employeeName},
            employee_name                = #{employeeName},
            detail                       = #{detail},
            social_security_status       = #{socialSecurityStatus},
            provident_fund_status        = #{providentFundStatus},
            social_security_city         = #{socialSecurityCity},
            provident_fund_city          = #{providentFundCity},
            employee_files_id            = #{employeeFilesId},
            first_level_client_name      = #{firstLevelClientName},
            second_level_client_name     = #{secondLevelClientName},
            id_type                      = #{idType},
            business_type                = #{businessType},
            identityNo                   = #{identityNo},
            s_welfare_handler            = #{sWelfareHandler},
            g_welfare_handler            = #{gWelfareHandler},
            social_security_base         = #{socialSecurityBase},
            provident_fund_base          = #{providentFundBase},
            social_security_charge_start = #{socialSecurityChargeStart},
            provident_fund_charge_start  = #{providentFundChargeStart},
            social_security_charge_end   = #{socialSecurityChargeEnd},
            provident_fund_charge_end    = #{providentFundChargeEnd},
            precollected                 = #{precollected},
            pay_cycle                    = #{payCycle},
            sb_bill_year                 = #{sbBillYear},
            gjj_bill_year                = #{gjjBillYear}
        WHERE id = #{id}
    </update>

    <select id="getEmployeeOrderFormByEmployeeFilesId" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.EmployeeOrderForm">
        SELECT em.*,
               (select max(sortKey) from i4fvb_order_details_pay_back where parentId = em.id)   payBackSortKey,
               (select max(sortKey) from i4fvb_order_details_remittance where parentId = em.id) remittanceSortKey
        FROM i4fvb_employee_order_form em
        WHERE em.employee_files_id = #{id}
        ORDER BY createdTime DESC
    </select>


    <update id="updateEmployeeFiles" parameterType="com.authine.cloudpivot.web.api.entity.EmployeeFiles">
        update i4fvb_employee_files
        SET name                         = #{employeeName},
            employee_name                = #{employeeName},
            id_type                      = #{idType},
            id_no                        = #{idNo},
            gender                       = #{gender},
            birth_date                   = #{birthDate},
            employee_nature              = #{employeeNature},
            household_register_nature    = #{householdRegisterNature},
            mobile                       = #{mobile},
            social_security_city         = #{socialSecurityCity},
            provident_fund_city          = #{providentFundCity},
            report_entry_time            = #{reportEntryTime},
            report_recruits              = #{reportRecruits},
            entry_time                   = #{entryTime},
            social_security_charge_start = #{socialSecurityChargeStart},
            provident_fund_charge_start  = #{providentFundChargeStart},
            entry_description            = #{entryDescription},
            report_quit_date             = #{reportQuitDate},
            report_severance_officer     = #{reportSeveranceOfficer},
            quit_date                    = #{quitDate},
            social_security_charge_end   = #{socialSecurityChargeEnd},
            provident_fund_charge_end    = #{providentFundChargeEnd},
            quit_reason                  = #{quitReason},
            quit_remark                  = #{quitRemark},
            entry_notice                 = #{entryNotice},
            health_check                 = #{healthCheck},
            whether_pay                  = #{whetherPay},
            position                     = #{position},
            email                        = #{email},
            employee_labels              = #{employeeLabels},
            stop_generate_bill           = #{stopGenerateBill},
            is_old_employee              = #{isOldEmployee},
            social_security_num          = #{socialSecurityNum},
            provident_fund_num           = #{providentFundNum},
            s_payment_application        = #{sPaymentApplication},
            g_payment_application        = #{gPaymentApplication},
            first_level_client_name      = #{firstLevelClientName},
            second_level_client_name     = #{secondLevelClientName},
            household_register_remarks   = #{householdRegisterRemarks},
            social_security_base         = #{socialSecurityBase},
            provident_fund_base          = #{providentFundBase},
            s_welfare_handler            = #{sWelfareHandler},
            g_welfare_handler            = #{gWelfareHandler},
            is_retired_soldier           = #{isRetiredSoldier},
            is_poor_archivists           = #{isPoorArchivists},
            is_disabled                  = #{isDisabled},
            operator                     = #{operator},
            inquirer                     = #{inquirer},
            sb_add_employee_id           = #{sbAddEmployeeId},
            gjj_add_employee_id          = #{gjjAddEmployeeId},
            sb_del_employee_id           = #{sbDelEmployeeId},
            gjj_del_employee_id          = #{gjjDelEmployeeId},
            subordinate_department       = #{subordinateDepartment}
        WHERE id = #{id}
    </update>


    <update id="updateAddEmployee" parameterType="com.authine.cloudpivot.web.api.entity.AddEmployee">
        UPDATE i4fvb_add_employee
        SET name                       = #{employeeName},
            employee_name              = #{employeeName},
            identityNo                 = #{identityNo},
            mobile                     = #{mobile},
            email                      = #{email},
            family_register_nature     = #{familyRegisterNature},
            employee_nature            = #{employeeNature},
            entry_time                 = #{entryTime},
            contract_start_time        = #{contractStartTime},
            contract_end_time          = #{contractEndTime},
            contract_salary            = #{contractSalary},
            social_security_start_time = #{socialSecurityStartTime},
            remark                     = #{remark},
            social_security_city       = #{socialSecurityCity},
            social_security_base       = #{socialSecurityBase},
            provident_fund_city        = #{providentFundCity},
            provident_fund_start_time  = #{providentFundStartTime},
            provident_fund_base        = #{providentFundBase},
            identityNo_type            = #{identityNoType},
            company_provident_fund_bl  = #{companyProvidentFundBl},
            employee_provident_fund_bl = #{employeeProvidentFundBl},
            first_level_client_name    = #{firstLevelClientName},
            second_level_client_name   = #{secondLevelClientName},
            household_register_remarks = #{householdRegisterRemarks},
            gender                     = #{gender},
            birthday                   = #{birthday},
            workplace                  = #{workplace},
            is_retired_soldier         = #{isRetiredSoldier},
            is_poor_archivists         = #{isPoorArchivists},
            is_disabled                = #{isDisabled},
            s_welfare_handler          = #{sWelfareHandler},
            g_welfare_handler          = #{gWelfareHandler},
            operator                   = #{operator},
            inquirer                   = #{inquirer},
            sb_status                  = #{sbStatus},
            gjj_status                 = #{gjjStatus},
            return_reason              = #{returnReason},
            provident_fund_name        = #{providentFundName},
            subordinate_department     = #{subordinateDepartment}
        WHERE id = #{id}
    </update>

    <update id="updateShAddEmployee" parameterType="com.authine.cloudpivot.web.api.entity.ShAddEmployee">
        UPDATE i4fvb_sh_add_employee
        SET name                        = #{employeeName},
            employee_name               = #{employeeName},
            unique_num                  = #{uniqueNum},
            identityNo                  = #{identityNo},
            commission_send             = #{commissionSend},
            identityNo_type             = #{identityNoType},
            order_code                  = #{orderCode},
            quotation_code              = #{quotationCode},
            sys_client_num              = #{sysClientNum},
            client_short_name           = #{clientShortName},
            project_proposals_name      = #{projectProposalsName},
            provident_fund_pay_direct   = #{providentFundPayDirect},
            social_security_pay_direct  = #{socialSecurityPayDirect},
            service_fee                 = #{serviceFee},
            entry_time                  = #{entryTime},
            benefit_start_time          = #{benefitStartTime},
            mobile                      = #{mobile},
            provident_fund_start_time   = #{providentFundStartTime},
            whether_consistent          = #{whetherConsistent},
            social_security_base        = #{socialSecurityBase},
            provident_fund_base         = #{providentFundBase},
            supplement_provident_fund_b = #{supplementProvidentFundB},
            charge_start_date           = #{chargeStartDate},
            dispatch_period_start_date  = #{dispatchPeriodStartDate},
            dispatch_deadline           = #{dispatchDeadline},
            start_date_trial            = #{startDateTrial},
            end_time_trial              = #{endTimeTrial},
            wage_trial                  = #{wageTrial},
            start_date_positive         = #{startDatePositive},
            end_date_positive           = #{endDatePositive},
            wage_positive               = #{wagePositive},
            phone                       = #{phone},
            employee_customer_side_num  = #{employeeCustomerSideNum},
            contact_address             = #{contactAddress},
            postal_code                 = #{postalCode},
            Hukou_location              = #{hukouLocation},
            mail                        = #{mail},
            bank_name                   = #{bankName},
            bank_account                = #{bankAccount},
            account_province_name       = #{accountProvinceName},
            account_city_name           = #{accountCityName},
            account_name                = #{accountName},
            bank_category               = #{bankCategory},
            city_name                   = #{cityName},
            tax_properties              = #{taxProperties},
            job_num                     = #{jobNum},
            HRO                         = #{hro},
            business_unit               = #{businessUnit},
            employee_status             = #{employeeStatus},
            synchronous_CSS             = #{synchronousCss},
            Induction_remark            = #{InductionRemark},
            tax_bureau                  = #{taxBureau},
            employee_attributes         = #{employeeAttributes},
            social_security_standards   = #{socialSecurityStandards},
            weather_online              = #{weatherOnline},
            work_system                 = #{workSystem},
            weather_Induction_E         = #{weatherInductionE},
            with_file                   = #{withFile},
            package_involves_procedures = #{packageInvolvesProcedures},
            social_security_section     = #{socialSecuritySection},
            u_supplement_provident_fund = #{uSupplementProvidentFund},
            p_supplement_provident_fund = #{pSupplementProvidentFund},
            first_level_client_name     = #{firstLevelClientName},
            second_level_client_name    = #{secondLevelClientName},
            is_retired_soldier          = #{isRetiredSoldier},
            is_poor_archivists          = #{isPoorArchivists},
            is_disabled                 = #{isDisabled},
            household_register_remarks  = #{householdRegisterRemarks},
            welfare_handler             = #{welfareHandler},
            gender                      = #{gender},
            birthday                    = #{birthday},
            workplace                   = #{workplace},
            operator                    = #{operator},
            inquirer                    = #{inquirer},
            return_reason               = #{returnReason},
            subordinate_department      = #{subordinateDepartment}
        WHERE id = #{id}
    </update>

    <update id="updateQgAddEmployee" parameterType="com.authine.cloudpivot.web.api.entity.NationwideDispatch">
        UPDATE i4fvb_nationwide_dispatch
        SET name                         = #{employeeName},
            unique_num                   = #{uniqueNum},
            employee_name                = #{employeeName},
            contact_number               = #{contactNumber},
            identityNo_type              = #{identityNoType},
            identityNo                   = #{identityNo},
            national_business_wf_flag    = #{nationalBusinessWfFlag},
            involved                     = #{involved},
            business_customer_num        = #{businessCustomerNum},
            business_wf_status           = #{businessWfStatus},
            order_type                   = #{orderType},
            processing_status            = #{processingStatus},
            contracting_supplier         = #{contractingSupplier},
            contracting_representative   = #{contractingRepresentative},
            contracting_party_department = #{contractingPartyDepartment},
            into_pending_date            = #{intoPendingDate},
            task_list_update_date        = #{taskListUpdateDate},
            entry_date                   = #{entryDate},
            employee_email               = #{employeeEmail},
            order_id                     = #{orderId},
            order_start_date             = #{orderStartDate},
            assignment_date              = #{assignmentDate},
            entry_procedures_num         = #{entry_procedures_num},
            business_tips                = #{businessTips},
            order_end_date               = #{orderEndDate},
            withdrawal_date              = #{withdrawalDate},
            social_insurance_amount      = #{socialInsuranceAmount},
            provident_fund_amount        = #{providentFundAmount},
            supple_provident_fund_amount = #{suppleProvidentFundAmount},
            revocation_reason            = #{revocationReason},
            social_security_stop_reason  = #{socialSecurityStopReason},
            departure_date               = #{departureDate},
            departure_remark             = #{departureRemark},
            change_details               = #{changeDetails},
            change_take_effect_date      = #{changeTakeEffectDate},
            business_unit                = #{businessUnit},
            salesman                     = #{salesman},
            social_security_pay_method   = #{socialSecurityPayMethod},
            provident_fund_pay_method    = #{providentFundPayMethod},
            supplier_agreement_name      = #{supplierAgreementName},
            provident_fund_ratio         = #{providentFundRatio},
            supple_provident_fund_ratio  = #{suppleProvidentFundRatio},
            social_security_standard     = #{socialSecurityStandard},
            s_service_fee_start_date     = #{sServiceFeeStartDate},
            s_service_fee_end_date       = #{sServiceFeeEndDate},
            g_service_fee_start_date     = #{gServiceFeeStartDate},
            g_service_fee_end_date       = #{gServiceFeeEndDate},
            remark                       = #{remark},
            first_level_client_name      = #{firstLevelClientName},
            second_level_client_name     = #{secondLevelClientName},
            subordinate_department       = #{subordinateDepartment},
            gender                       = #{gender},
            birthday                     = #{birthday},
            welfare_handler              = #{welfareHandler},
            employee_internal_num        = #{employeeInternalNum},
            is_retired_soldier           = #{isRetiredSoldier},
            is_poor_archivists           = #{isPoorArchivists},
            is_disabled                  = #{isDisabled},
            workplace                    = #{workplace},
            household_register_remarks   = #{householdRegisterRemarks},
            operator                     = #{operator},
            inquirer                     = #{inquirer},
            return_reason                = #{returnReason}
        WHERE id = #{id}
    </update>

    <select id="getUpdateAddEmployeeById" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.AddEmployee">
        SELECT *
        FROM i4fvb_add_employee_update
        WHERE id = #{id}
    </select>

    <select id="getUpdateShAddEmployeeById" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.ShAddEmployee">
        SELECT *
        FROM i4fvb_sh_add_employee_update
        WHERE id = #{id}
    </select>

    <select id="getUpdateQgAddEmployeeById" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.NationwideDispatch">
        SELECT *
        FROM i4fvb_nationwide_dispatch_update
        WHERE id = #{id}
    </select>

    <select id="getEmployeeFilesByAddEmployeeId" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.EmployeeFiles">
        SELECT *
        FROM i4fvb_employee_files
        WHERE sb_add_employee_id = #{addEmployeeId}
           OR gjj_add_employee_id = #{addEmployeeId}
        ORDER BY createdTime DESC
        LIMIT 0,1
    </select>

    <select id="getSocialSecurityDeclareByAddEmployeeId" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.SocialSecurityDeclare">
        SELECT *
        FROM i4fvb_social_security_declare
        WHERE add_employee_id = #{addEmployeeId}
        ORDER BY createdTime DESC
        LIMIT 0,1
    </select>

    <select id="getProvidentFundDeclareByAddEmployeeId" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.ProvidentFundDeclare">
        SELECT *
        FROM i4fvb_provident_fund_declare
        WHERE add_employee_id = #{addEmployeeId}
        ORDER BY createdTime DESC
        LIMIT 0,1
    </select>

    <update id="updateAddEmployeeByUpdate" parameterType="com.authine.cloudpivot.web.api.entity.AddEmployee">
        UPDATE i4fvb_add_employee
        SET name                       = #{employeeName},
            employee_name              = #{employeeName},
            identityNo                 = #{identityNo},
            mobile                     = #{mobile},
            email                      = #{email},
            family_register_nature     = #{familyRegisterNature},
            employee_nature            = #{employeeNature},
            entry_time                 = #{entryTime},
            contract_start_time        = #{contractStartTime},
            contract_end_time          = #{contractEndTime},
            contract_salary            = #{contractSalary},
            social_security_start_time = #{socialSecurityStartTime},
            remark                     = #{remark},
            social_security_city       = #{socialSecurityCity},
            social_security_base       = #{socialSecurityBase},
            provident_fund_city        = #{providentFundCity},
            provident_fund_start_time  = #{providentFundStartTime},
            provident_fund_base        = #{providentFundBase},
            identityNo_type            = #{identityNoType},
            company_provident_fund_bl  = #{companyProvidentFundBl},
            employee_provident_fund_bl = #{employeeProvidentFundBl},
            first_level_client_name    = #{firstLevelClientName},
            second_level_client_name   = #{secondLevelClientName},
            household_register_remarks = #{householdRegisterRemarks},
            gender                     = #{gender},
            birthday                   = #{birthday},
            workplace                  = #{workplace},
            is_retired_soldier         = #{isRetiredSoldier},
            is_poor_archivists         = #{isPoorArchivists},
            is_disabled                = #{isDisabled},
            s_welfare_handler          = #{sWelfareHandler},
            g_welfare_handler          = #{gWelfareHandler},
            operator                   = #{operator},
            inquirer                   = #{inquirer},
            return_reason              = #{returnReason},
            provident_fund_name        = #{providentFundName},
            subordinate_department     = #{subordinateDepartment}
        WHERE id = #{addEmployeeId}
    </update>

    <update id="updateShAddEmployeeByUpdate" parameterType="com.authine.cloudpivot.web.api.entity.ShAddEmployee">
        UPDATE i4fvb_sh_add_employee
        SET name                        = #{employeeName},
            employee_name               = #{employeeName},
            unique_num                  = #{uniqueNum},
            identityNo                  = #{identityNo},
            commission_send             = #{commissionSend},
            identityNo_type             = #{identityNoType},
            order_code                  = #{orderCode},
            quotation_code              = #{quotationCode},
            sys_client_num              = #{sysClientNum},
            client_short_name           = #{clientShortName},
            project_proposals_name      = #{projectProposalsName},
            provident_fund_pay_direct   = #{providentFundPayDirect},
            social_security_pay_direct  = #{socialSecurityPayDirect},
            service_fee                 = #{serviceFee},
            entry_time                  = #{entryTime},
            benefit_start_time          = #{benefitStartTime},
            mobile                      = #{mobile},
            provident_fund_start_time   = #{providentFundStartTime},
            whether_consistent          = #{whetherConsistent},
            social_security_base        = #{socialSecurityBase},
            provident_fund_base         = #{providentFundBase},
            supplement_provident_fund_b = #{supplementProvidentFundB},
            charge_start_date           = #{chargeStartDate},
            dispatch_period_start_date  = #{dispatchPeriodStartDate},
            dispatch_deadline           = #{dispatchDeadline},
            start_date_trial            = #{startDateTrial},
            end_time_trial              = #{endTimeTrial},
            wage_trial                  = #{wageTrial},
            start_date_positive         = #{startDatePositive},
            end_date_positive           = #{endDatePositive},
            wage_positive               = #{wagePositive},
            phone                       = #{phone},
            employee_customer_side_num  = #{employeeCustomerSideNum},
            contact_address             = #{contactAddress},
            postal_code                 = #{postalCode},
            Hukou_location              = #{hukouLocation},
            mail                        = #{mail},
            bank_name                   = #{bankName},
            bank_account                = #{bankAccount},
            account_province_name       = #{accountProvinceName},
            account_city_name           = #{accountCityName},
            account_name                = #{accountName},
            bank_category               = #{bankCategory},
            city_name                   = #{cityName},
            tax_properties              = #{taxProperties},
            job_num                     = #{jobNum},
            HRO                         = #{hro},
            business_unit               = #{businessUnit},
            employee_status             = #{employeeStatus},
            synchronous_CSS             = #{synchronousCss},
            Induction_remark            = #{InductionRemark},
            tax_bureau                  = #{taxBureau},
            employee_attributes         = #{employeeAttributes},
            social_security_standards   = #{socialSecurityStandards},
            weather_online              = #{weatherOnline},
            work_system                 = #{workSystem},
            weather_Induction_E         = #{weatherInductionE},
            with_file                   = #{withFile},
            package_involves_procedures = #{packageInvolvesProcedures},
            social_security_section     = #{socialSecuritySection},
            u_supplement_provident_fund = #{uSupplementProvidentFund},
            p_supplement_provident_fund = #{pSupplementProvidentFund},
            first_level_client_name     = #{firstLevelClientName},
            second_level_client_name    = #{secondLevelClientName},
            is_retired_soldier          = #{isRetiredSoldier},
            is_poor_archivists          = #{isPoorArchivists},
            is_disabled                 = #{isDisabled},
            household_register_remarks  = #{householdRegisterRemarks},
            welfare_handler             = #{welfareHandler},
            gender                      = #{gender},
            birthday                    = #{birthday},
            workplace                   = #{workplace},
            operator                    = #{operator},
            inquirer                    = #{inquirer},
            return_reason               = #{returnReason},
            subordinate_department      = #{subordinateDepartment}
        WHERE id = #{shAddEmployeeId}
    </update>

    <update id="updateQgAddEmployeeByUpdate" parameterType="com.authine.cloudpivot.web.api.entity.NationwideDispatch">
        UPDATE i4fvb_nationwide_dispatch
        SET name                         = #{employeeName},
            unique_num                   = #{uniqueNum},
            employee_name                = #{employeeName},
            contact_number               = #{contactNumber},
            identityNo_type              = #{identityNoType},
            identityNo                   = #{identityNo},
            national_business_wf_flag    = #{nationalBusinessWfFlag},
            involved                     = #{involved},
            business_customer_num        = #{businessCustomerNum},
            business_wf_status           = #{businessWfStatus},
            order_type                   = #{orderType},
            processing_status            = #{processingStatus},
            contracting_supplier         = #{contractingSupplier},
            contracting_representative   = #{contractingRepresentative},
            contracting_party_department = #{contractingPartyDepartment},
            into_pending_date            = #{intoPendingDate},
            task_list_update_date        = #{taskListUpdateDate},
            entry_date                   = #{entryDate},
            employee_email               = #{employeeEmail},
            order_id                     = #{orderId},
            order_start_date             = #{orderStartDate},
            assignment_date              = #{assignmentDate},
            entry_procedures_num         = #{entry_procedures_num},
            business_tips                = #{businessTips},
            order_end_date               = #{orderEndDate},
            withdrawal_date              = #{withdrawalDate},
            social_insurance_amount      = #{socialInsuranceAmount},
            provident_fund_amount        = #{providentFundAmount},
            supple_provident_fund_amount = #{suppleProvidentFundAmount},
            revocation_reason            = #{revocationReason},
            social_security_stop_reason  = #{socialSecurityStopReason},
            departure_date               = #{departureDate},
            departure_remark             = #{departureRemark},
            change_details               = #{changeDetails},
            change_take_effect_date      = #{changeTakeEffectDate},
            business_unit                = #{businessUnit},
            salesman                     = #{salesman},
            social_security_pay_method   = #{socialSecurityPayMethod},
            provident_fund_pay_method    = #{providentFundPayMethod},
            supplier_agreement_name      = #{supplierAgreementName},
            provident_fund_ratio         = #{providentFundRatio},
            supple_provident_fund_ratio  = #{suppleProvidentFundRatio},
            social_security_standard     = #{socialSecurityStandard},
            s_service_fee_start_date     = #{sServiceFeeStartDate},
            s_service_fee_end_date       = #{sServiceFeeEndDate},
            g_service_fee_start_date     = #{gServiceFeeStartDate},
            g_service_fee_end_date       = #{gServiceFeeEndDate},
            remark                       = #{remark},
            first_level_client_name      = #{firstLevelClientName},
            second_level_client_name     = #{secondLevelClientName},
            subordinate_department       = #{subordinateDepartment},
            gender                       = #{gender},
            birthday                     = #{birthday},
            welfare_handler              = #{welfareHandler},
            employee_internal_num        = #{employeeInternalNum},
            is_retired_soldier           = #{isRetiredSoldier},
            is_poor_archivists           = #{isPoorArchivists},
            is_disabled                  = #{isDisabled},
            workplace                    = #{workplace},
            household_register_remarks   = #{householdRegisterRemarks},
            operator                     = #{operator},
            inquirer                     = #{inquirer},
            return_reason                = #{returnReason}
        WHERE id = #{nationwideDispatchId}
    </update>


    <delete id="delOrderFormSbDetails">
        DELETE
        FROM ${tableName}
        WHERE parentId = #{parentId}
          AND product_name IN ('养老保险', '医疗保险', '失业保险', '工伤保险', '生育保险', '大病保险', '综合保险', '补充工伤')
    </delete>

    <delete id="delOrderFormGjjDetails">
        DELETE
        FROM ${tableName}
        WHERE parentId = #{parentId}
          AND product_name IN ('省直公积金', '市直公积金', '补充公积金')
    </delete>

    <select id="getUpdateEmployeeFilesById" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.EmployeeFiles">
        SELECT *
        FROM i4fvb_employee_files_update
        WHERE id = #{id}
    </select>

    <select id="getEmployeeFilesById" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.EmployeeFiles">
        SELECT *
        FROM i4fvb_employee_files
        WHERE id = #{id}
    </select>

    <delete id="deleteBatchPreDispatchByAddEmployeeId">
        DELETE
        FROM i4fvb_batch_pre_dispatch
        WHERE add_employee_id = #{addEmployeeId}
    </delete>

    <update id="updateStatusToCancelDispatch">
        UPDATE ${tableName}
        SET sb_status  = '取派',
            gjj_status = '取派'
        WHERE id = #{id}
    </update>

    <select id="listSocialSecurityDeclare" parameterType="java.util.List"
            resultType="com.authine.cloudpivot.web.api.entity.SocialSecurityDeclare">
        SELECT * FROM i4fvb_social_security_declare WHERE id IN
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <select id="listProvidentFundDeclare" parameterType="java.util.List"
            resultType="com.authine.cloudpivot.web.api.entity.ProvidentFundDeclare">
        SELECT * FROM i4fvb_provident_fund_declare WHERE id IN
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <insert id="addOrderFormDetailsFromDeclare">
        INSERT INTO ${orderFormTableName} (product_name, start_charge_time, end_charge_time, company_base,
                                           employee_base, company_ratio, employee_ratio, sum, company_money,
                                           employee_money, company_surcharge_value, employee_surcharge_value, id,
                                           parentId, sortKey)
        SELECT product_name,
               start_charge_time,
               end_charge_time,
               company_base,
               employee_base,
               company_ratio,
               employee_ratio,
               sum,
               company_money,
               employee_money,
               company_surcharge_value,
               employee_surcharge_value,
               id,
               ${orderFormId},
               sortKey
        FROM ${declareTableName}
        WHERE parentId = #{declareId}
    </insert>

    <update id="updateAddEmployeeStatus">
        UPDATE i4fvb_add_employee
        SET ${field} = #{status}
        <if test="returnReason != null">
            , return_reason = #{returnReason}
        </if>
        WHERE id = #{id}
    </update>

    <update id="updateDeclareSubmitInfo">
        UPDATE ${tableName}
        SET status    = #{status},
            bill_year = #{billYear}
        WHERE id = #{id}
    </update>
</mapper>