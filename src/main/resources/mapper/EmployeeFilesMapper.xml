<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.authine.cloudpivot.web.api.mapper.EmployeeFilesMapper">

    <!-- 根据员工身份证，客户名称获取员工档案 -->
    <select id="getEmployeeFilesByIdNoOrClientName" resultType="com.authine.cloudpivot.web.api.entity.EmployeeFiles">
        SELECT * FROM i4fvb_employee_files
        <where>
            <if test="idNo != null">
                AND id_no = #{idNo}
            </if>
            <if test="clientName != null">
                AND client_name = #{clientName}
            </if>
        </where>
    </select>

    <insert id="insertShAddEmployeeData" parameterType="java.util.List">
        INSERT INTO i4fvb_sh_add_employee
        (id, name, creater, createdDeptId, owner, ownerDeptId, createdTime, modifier, modifiedTime, workflowInstanceId,
        sequenceNo, sequenceStatus, ownerDeptQueryCode,
        employee_name, unique_num, identityNo, commission_send, identityNo_type, order_code,
        quotation_code, sys_client_num, client_name, client_short_name, project_proposals_name,
        provident_fund_pay_direct, social_security_pay_direct, service_fee, with_file,
        package_involves_procedures, entry_time, benefit_start_time, mobile,
        provident_fund_start_time, whether_consistent, social_security_section,
        social_security_base, provident_fund_base, p_supplement_provident_fund, u_supplement_provident_fund,
        supplement_provident_fund_b, charge_start_date, dispatch_period_start_date,
        dispatch_deadline, start_date_trial, end_time_trial, wage_trial, start_date_positive,
        end_date_positive, wage_positive, phone, employee_customer_side_num, contact_address,
        postal_code, Hukou_location, mail, bank_name, bank_account, account_province_name,
        account_city_name, account_name, bank_category, city_name, tax_properties, job_num,
        HRO, business_unit, employee_status, synchronous_CSS, Induction_remark, tax_bureau,
        employee_attributes, social_security_standards, weather_online, work_system,
        weather_Induction_E)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id}, #{item.employee_name}, #{item.creater}, #{item.createdDeptId},
            #{item.owner},#{item.ownerDeptId},
            #{item.createdTime}, #{item.modifier}, #{item.modifiedTime}, #{item.workflowInstanceId},
            #{item.sequenceNo}, #{item.sequenceStatus}, #{item.ownerDeptQueryCode},
            #{item.employee_name}, #{item.unique_num}, #{item.identityNo}, #{item.commission_send},
            #{item.identityNo_type}, #{item.order_code},
            #{item.quotation_code}, #{item.sys_client_num}, #{item.client_name}, #{item.client_short_name},
            #{item.project_proposals_name},
            #{item.provident_fund_pay_direct}, #{item.social_security_pay_direct}, #{item.service_fee},
            #{item.with_file},
            #{item.package_involves_procedures}, #{item.entry_time}, #{item.benefit_start_time}, #{item.mobile},
            #{item.provident_fund_start_time}, #{item.whether_consistent}, #{item.social_security_section},
            #{item.social_security_base}, #{item.provident_fund_base}, #{item.p_supplement_provident_fund},
            #{item.u_supplement_provident_fund},
            #{item.supplement_provident_fund_b}, #{item.charge_start_date}, #{item.dispatch_period_start_date},
            #{item.dispatch_deadline}, #{item.start_date_trial}, #{item.end_time_trial}, #{item.wage_trial},
            #{item.start_date_positive},
            #{item.end_date_positive}, #{item.wage_positive}, #{item.phone}, #{item.employee_customer_side_num},
            #{item.contact_address},
            #{item.postal_code}, #{item.Hukou_location}, #{item.mail}, #{item.bank_name}, #{item.bank_account},
            #{item.account_province_name},
            #{item.account_city_name}, #{item.account_name}, #{item.bank_category}, #{item.city_name},
            #{item.tax_properties}, #{item.job_num},
            #{item.HRO}, #{item.business_unit}, #{item.employee_status}, #{item.synchronous_CSS},
            #{item.Induction_remark}, #{item.tax_bureau},
            #{item.employee_attributes}, #{item.social_security_standards}, #{item.weather_online}, #{item.work_system},
            #{item.weather_Induction_E})
        </foreach>
    </insert>

    <insert id="insertShDeleteEmployeeData" parameterType="java.util.List">
        INSERT INTO i4fvb_sh_delete_employee(id, name, creater, createdDeptId, owner, ownerDeptId, createdTime,
        modifier, modifiedTime, workflowInstanceId, sequenceNo, sequenceStatus, ownerDeptQueryCode,
        employee_name, identityNo, client_num, client_name, client_short_name, OS_initiated_departure_time,
        departure_time,
        charge_end_time, leave_reason, leave_remark, provident_fund_transfer_mode, backtrack, GE_leave_reason,
        customer_num,
        weather_leave_E, identityNo_type)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id}, #{item.employee_name}, #{item.creater}, #{item.createdDeptId},
            #{item.owner},#{item.ownerDeptId},
            #{item.createdTime}, #{item.modifier}, #{item.modifiedTime}, #{item.workflowInstanceId},
            #{item.sequenceNo}, #{item.sequenceStatus}, #{item.ownerDeptQueryCode},
            #{item.employee_name}, #{item.identityNo}, #{item.client_num}, #{item.client_name},
            #{item.client_short_name}, #{item.OS_initiated_departure_time}, #{item.departure_time},
            #{item.charge_end_time}, #{item.leave_reason}, #{item.leave_remark}, #{item.provident_fund_transfer_mode},
            #{item.backtrack}, #{item.GE_leave_reason}, #{item.customer_num},
            #{item.weather_leave_E}, #{item.identityNo_type})
        </foreach>
    </insert>

    <insert id="insertNationwideAddEmployee" parameterType="java.util.List">
        INSERT INTO i4fvb_nationwide_dispatch(id, name, creater, createdDeptId, owner, ownerDeptId, createdTime,
        modifier, modifiedTime, workflowInstanceId, sequenceNo, sequenceStatus, ownerDeptQueryCode,
        unique_num, employee_name, contact_number, identityNo_type, identityNo, national_business_wf_flag, involved,
        business_customer_num, business_customer_name, business_wf_status, order_type, processing_status,
        contracting_supplier,
        contracting_representative, contracting_party_department, into_pending_date, task_list_update_date, entry_date,
        rmployee_internal_num, employee_email, order_id, order_start_date, assignment_date, entry_procedures_num,
        business_tips,
        order_end_date, withdrawal_date, social_insurance_amount, provident_fund_amount, supple_provident_fund_amount,
        revocation_reason, social_security_stop_reason, departure_date, departure_remark, change_details,
        change_take_effect_date,
        business_unit, salesman, social_security_pay_method, provident_fund_pay_method, supplier_agreement_name,
        provident_fund_ratio, supple_provident_fund_ratio, social_security_standard, s_service_fee_start_date,
        s_service_fee_end_date, g_service_fee_start_date, g_service_fee_end_date, remark)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id}, #{item.employee_name}, #{item.creater}, #{item.createdDeptId},
            #{item.owner},#{item.ownerDeptId},
            #{item.createdTime}, #{item.modifier}, #{item.modifiedTime}, #{item.workflowInstanceId},
            #{item.sequenceNo}, #{item.sequenceStatus}, #{item.ownerDeptQueryCode},
            #{item.unique_num}, #{item.employee_name}, #{item.contact_number}, #{item.identityNo_type},
            #{item.identityNo}, #{item.national_business_wf_flag}, #{item.involved},
            #{item.business_customer_num}, #{item.business_customer_name}, #{item.business_wf_status},
            #{item.order_type}, #{item.processing_status}, #{item.contracting_supplier},
            #{item.contracting_representative}, #{item.contracting_party_department}, #{item.into_pending_date},
            #{item.task_list_update_date}, #{item.entry_date},
            #{item.rmployee_internal_num}, #{item.employee_email}, #{item.order_id}, #{item.order_start_date},
            #{item.assignment_date}, #{item.entry_procedures_num}, #{item.business_tips},
            #{item.order_end_date}, #{item.withdrawal_date}, #{item.social_insurance_amount},
            #{item.provident_fund_amount}, #{item.supple_provident_fund_amount},
            #{item.revocation_reason}, #{item.social_security_stop_reason}, #{item.departure_date},
            #{item.departure_remark}, #{item.change_details}, #{item.change_take_effect_date},
            #{item.business_unit}, #{item.salesman}, #{item.social_security_pay_method},
            #{item.provident_fund_pay_method}, #{item.supplier_agreement_name},
            #{item.provident_fund_ratio}, #{item.supple_provident_fund_ratio}, #{item.social_security_standard},
            #{item.s_service_fee_start_date},
            #{item.s_service_fee_end_date}, #{item.g_service_fee_start_date}, #{item.g_service_fee_end_date},
            #{item.remark})
        </foreach>
    </insert>

    <insert id="insertNationwideDeleteEmployee" parameterType="java.util.List">
        INSERT INTO i4fvb_nationwide_dispatch_delete(id, name, creater, createdDeptId, owner, ownerDeptId, createdTime,
        modifier, modifiedTime, workflowInstanceId, sequenceNo, sequenceStatus, ownerDeptQueryCode,
        unique_num, employee_name, contact_number, identityNo_type, identityNo, national_business_wf_flag, involved,
        business_customer_num, business_customer_name, business_wf_status, order_type, processing_status,
        contracting_supplier,
        contracting_representative, contracting_party_department, into_pending_date, task_list_update_date, entry_date,
        rmployee_internal_num, employee_email, order_id, order_start_date, assignment_date, entry_procedures_num,
        business_tips,
        order_end_date, withdrawal_date, social_insurance_amount, provident_fund_amount, supple_provident_fund_amount,
        revocation_reason, social_security_stop_reason, departure_date, departure_remark, change_details,
        change_take_effect_date,
        business_unit, salesman, social_security_pay_method, provident_fund_pay_method, supplier_agreement_name,
        provident_fund_ratio, supple_provident_fund_ratio, social_security_standard, s_service_fee_start_date,
        s_service_fee_end_date, g_service_fee_start_date, g_service_fee_end_date, remark)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id}, #{item.employee_name}, #{item.creater}, #{item.createdDeptId},
            #{item.owner},#{item.ownerDeptId},
            #{item.createdTime}, #{item.modifier}, #{item.modifiedTime}, #{item.workflowInstanceId},
            #{item.sequenceNo}, #{item.sequenceStatus}, #{item.ownerDeptQueryCode},
            #{item.unique_num}, #{item.employee_name}, #{item.contact_number}, #{item.identityNo_type},
            #{item.identityNo}, #{item.national_business_wf_flag}, #{item.involved},
            #{item.business_customer_num}, #{item.business_customer_name}, #{item.business_wf_status},
            #{item.order_type}, #{item.processing_status}, #{item.contracting_supplier},
            #{item.contracting_representative}, #{item.contracting_party_department}, #{item.into_pending_date},
            #{item.task_list_update_date}, #{item.entry_date},
            #{item.rmployee_internal_num}, #{item.employee_email}, #{item.order_id}, #{item.order_start_date},
            #{item.assignment_date}, #{item.entry_procedures_num}, #{item.business_tips},
            #{item.order_end_date}, #{item.withdrawal_date}, #{item.social_insurance_amount},
            #{item.provident_fund_amount}, #{item.supple_provident_fund_amount},
            #{item.revocation_reason}, #{item.social_security_stop_reason}, #{item.departure_date},
            #{item.departure_remark}, #{item.change_details}, #{item.change_take_effect_date},
            #{item.business_unit}, #{item.salesman}, #{item.social_security_pay_method},
            #{item.provident_fund_pay_method}, #{item.supplier_agreement_name},
            #{item.provident_fund_ratio}, #{item.supple_provident_fund_ratio}, #{item.social_security_standard},
            #{item.s_service_fee_start_date},
            #{item.s_service_fee_end_date}, #{item.g_service_fee_start_date}, #{item.g_service_fee_end_date},
            #{item.remark})
        </foreach>
    </insert>

    <select id="getAddEmployeeData" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.AddEmployee">
        SELECT * FROM i4fvb_add_employee WHERE id = #{id}
    </select>

    <select id="getAddEmployeeUpdateData" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.AddEmployee">
        SELECT * FROM i4fvb_add_employee_update WHERE id = #{id}
    </select>

    <select id="getDeleteEmployeeData" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.DeleteEmployee">
        SELECT * FROM i4fvb_delete_employee WHERE id = #{id}
    </select>

    <select id="getDeleteEmployeeUpdateData" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.DeleteEmployee">
        SELECT * FROM i4fvb_delete_employee_update WHERE id = #{id}
    </select>

    <select id="getShAddEmployeeData" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.ShAddEmployee">
        SELECT * FROM i4fvb_sh_add_employee WHERE id = #{id}
    </select>

    <select id="getShAddEmployeeUpdateData" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.ShAddEmployee">
        SELECT * FROM i4fvb_sh_add_employee_update WHERE id = #{id}
    </select>

    <select id="getShDeleteEmployeeData" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.ShDeleteEmployee">
        SELECT * FROM i4fvb_sh_delete_employee WHERE id = #{id}
    </select>

    <select id="getShDeleteEmployeeUpdateData" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.ShDeleteEmployee">
        SELECT * FROM i4fvb_sh_delete_employee_update WHERE id = #{id}
    </select>

    <select id="getNationwideAddEmployeeData" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.NationwideDispatch">
        SELECT * FROM i4fvb_nationwide_dispatch WHERE id = #{id}
    </select>

    <select id="getNationwideAddEmployeeUpdateData" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.NationwideDispatch">
        SELECT * FROM i4fvb_nationwide_dispatch_update WHERE id = #{id}
    </select>

    <select id="getNationwideDeleteEmployeeData" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.NationwideDispatch">
        SELECT * FROM i4fvb_nationwide_dispatch_delete WHERE id = #{id}
    </select>

    <select id="getNationwideDeleteEmployeeUpdateData" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.NationwideDispatch">
        SELECT * FROM i4fvb_nationwide_dispatch_update WHERE id = #{id}
    </select>

    <select id="getEmployeeFilesData" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.EmployeeFiles">
        SELECT * FROM i4fvb_employee_files WHERE id = #{id}
    </select>

    <select id="getEmployeeFilesUpdateData" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.EmployeeFiles">
        SELECT * FROM i4fvb_employee_files_update WHERE id = #{id}
    </select>

    <insert id="addEmployeeUpdateDetail" parameterType="java.util.List">
        INSERT INTO i4fvb_add_employee_update_detail
        (update_field, update_before_value, update_after_value, id, parentId)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.updateField}, #{item.updateBeforeValue}, #{item.updateAfterValue}, #{item.id}, #{item.parentId})
        </foreach>
    </insert>

    <insert id="shAddEmployeeUpdateDetail" parameterType="java.util.List">
        INSERT INTO i4fvb_shadd_employee_update_detail
        (update_field, update_before_value, update_after_value, id, parentId)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.updateField}, #{item.updateBeforeValue}, #{item.updateAfterValue}, #{item.id}, #{item.parentId})
        </foreach>
    </insert>

    <insert id="nationAddUpdateDetail" parameterType="java.util.List">
        INSERT INTO i4fvb_nation_add_update_detail
        (update_field, update_before_value, update_after_value, id, parentId)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.updateField}, #{item.updateBeforeValue}, #{item.updateAfterValue}, #{item.id}, #{item.parentId})
        </foreach>
    </insert>

    <insert id="delEmployeeUpdateDetail" parameterType="java.util.List">
        INSERT INTO i4fvb_del_employee_update_detail
        (update_field, update_before_value, update_after_value, id, parentId)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.updateField}, #{item.updateBeforeValue}, #{item.updateAfterValue}, #{item.id}, #{item.parentId})
        </foreach>
    </insert>

    <insert id="shDelEmployeeUpdateDetail" parameterType="java.util.List">
        INSERT INTO i4fvb_shdel_employee_update_detail
        (update_field, update_before_value, update_after_value, id, parentId)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.updateField}, #{item.updateBeforeValue}, #{item.updateAfterValue}, #{item.id}, #{item.parentId})
        </foreach>
    </insert>

    <insert id="nationDelUpdateDetail" parameterType="java.util.List">
        INSERT INTO i4fvb_nation_del_update_detail
        (update_field, update_before_value, update_after_value, id, parentId)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.updateField}, #{item.updateBeforeValue}, #{item.updateAfterValue}, #{item.id}, #{item.parentId})
        </foreach>
    </insert>

    <insert id="employeeFilesUpdateDetail" parameterType="java.util.List">
        INSERT INTO i4fvb_employee_files_update_detail
        (update_field, update_before_value, update_after_value, id, parentId)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.updateField}, #{item.updateBeforeValue}, #{item.updateAfterValue}, #{item.id}, #{item.parentId})
        </foreach>
    </insert>


    <resultMap id="employeeFilesDto" type="com.authine.cloudpivot.web.api.dto.EmployeeFilesDto">
        <id column="id" property="id"></id>
        <collection property="employeeOrderFormDto"
                    select="com.authine.cloudpivot.web.api.mapper.EmployeeFilesMapper.getEmployeeOrderFormByEmployeeFilesId"
                    column="id"></collection>
        <!--<collection property="clientName" select="com.authine.cloudpivot.web.api.mapper.EmployeeFilesMapper.getClientNameById" column="client_name"></collection>-->
    </resultMap>
    <select id="getEmployeeFilesCanGenerateBillByClientName" resultMap="employeeFilesDto">
        SELECT * FROM i4fvb_employee_files WHERE client_name = #{clientName} AND stop_generate_bill = 0 AND employee_nature = #{employeeNature} AND social_security_city REGEXP "合肥|巢湖|芜湖|蚌埠|淮南|马鞍山|铜陵|安庆|黄山|滁州|阜阳|宿州|六安|亳州|池州|宣城"
    </select>

    <select id="getClientNameById" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT company_name AS clientName FROM id34a_first_level_client WHERE id = #{client_name} LIMIT 0, 1
    </select>

    <resultMap id="employeeOrderFormDto" type="com.authine.cloudpivot.web.api.dto.EmployeeOrderFormDto">
        <id column="id" property="id"></id>
        <collection property="socialSecurityFundDetails"
                    select="com.authine.cloudpivot.web.api.mapper.EmployeeFilesMapper.getSocialSecurityFundDetailByParentId"
                    column="id"></collection>
    </resultMap>
    <select id="getEmployeeOrderFormByEmployeeFilesId" resultMap="employeeOrderFormDto">
        SELECT * FROM i4fvb_employee_order_form WHERE employee_files_id = #{id} AND is_history = '否'
    </select>

    <select id="getSocialSecurityFundDetailByParentId"
            resultType="com.authine.cloudpivot.web.api.entity.SocialSecurityFundDetail">
        SELECT * FROM i4fvb_social_security_fund_detail WHERE parentId = #{id}
    </select>
    <select id="getNoCompareBills" parameterType="java.lang.String"
            resultType="com.authine.cloudpivot.web.api.entity.Bill">
        SELECT * FROM i4fvb_bill_details WHERE id_no = #{idNo}
    </select>

    <!-- 根据账单年月，证件号码获取信息收费账单 -->
    <select id="getPayrollBills" resultType="com.authine.cloudpivot.web.api.entity.PayrollBill">
        SELECT * FROM i4fvb_payroll_bill WHERE bill_year = #{billYear} AND id_no = #{idNo} ORDER BY createdTime DESC
    </select>

    <!-- 更新员工档案 -->
    <update id="updateEmployee" parameterType="com.authine.cloudpivot.web.api.dto.EmployeeFilesDto">
        UPDATE i4fvb_employee_files
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="is_old_employee = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.isOldEmployee != null">
                        WHEN id = #{item.id} THEN #{item.isOldEmployee}
                    </if>
                </foreach>
            </trim>
            <trim prefix="stop_generate_bill = case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.stopGenerateBill != null">
                        WHEN id = #{item.id} THEN #{item.stopGenerateBill}
                    </if>
                </foreach>
            </trim>
        </trim>
        WHERE
        id IN (
        <foreach collection="list" item="item" index="index" separator=",">
            #{item.id}
        </foreach>
        )
    </update>

    <insert id="insertBills" parameterType="com.authine.cloudpivot.web.api.entity.Bill">
        INSERT INTO i4fvb_bill_details
        (id, name, creater, createdDeptId, owner, ownerDeptId, createdTime, modifier, modifiedTime,
        workflowInstanceId, sequenceNo, sequenceStatus, ownerDeptQueryCode,
        supplier, business_year, client_name, employee_name, id_no, unique_num, delegated_area,
        pension_enterprise_base, pension_enterprise_ratio, pension_enterprise_attach, pension_enterprise_pay,
        pension_personal_base, pension_personal_ratio, pension_personal_attach, pension_personal_pay,
        pension_subtotal, pension_payment_method, medical_enterprise_base, medical_enterprise_ratio,
        medical_enterprise_attach, medical_enterprise_pay, medical_personal_base, medical_personal_ratio,
        medical_personal_attach, medical_personal_pay, medical_subtotal, medical_payment_method,
        unemp_enterprise_base, unemp_enterprise_ratio, unemp_enterprise_attach, unemp_enterprise_pay,
        unemp_personal_base, unemp_personal_ratio, unemp_personal_attach, unemp_personal_pay,
        unemp_subtotal, unemp_payment_method, injury_enterprise_base, injury_enterprise_ratio,
        injury_enterprise_attach, injury_enterprise_pay, injury_subtotal, injury_payment_method,
        fertility_enterprise_base, fertility_enterprise_ratio, fertility_enterprise_attach,
        fertility_enterprise_pay, fertility_subtotal, fertility_payment_method, d_medical_enterprise_base,
        d_medical_enterprise_ratio, d_medical_enterprise_attach, d_medical_enterprise_pay,
        d_medical_personal_base, d_medical_personal_ratio, d_medical_personal_attach, d_medical_personal_pay,
        d_medical_subtotal, d_medical_payment_method, complex_enterprise_base, complex_enterprise_ratio,
        complex_enterprise_attach, complex_enterprise_pay, complex_personal_base, complex_personal_ratio,
        complex_personal_attach, complex_personal_pay, complex_subtotal, complex_payment_method,
        b_injury_enterprise_base, b_injury_enterprise_ratio, b_injury_enterprise_attach,
        b_injury_enterprise_pay, b_injury_subtotal, b_injury_payment_method, social_security_enterprise,
        social_security_personal, social_security_total, provident_enterprise_base, provident_enterprise_ratio,
        provident_enterprise_pay, provident_personal_base, provident_personal_ratio, provident_personal_pay,
        provident_subtotal, provident_payment_method, b_provident_enterprise_base, b_provident_enterprise_ratio,
        b_provident_enterprise_pay, b_provident_personal_base, b_provident_personal_ratio,
        b_provident_personal_pay, b_provident_subtotal, b_provident_payment_method, provident_enterprise,
        provident_personal, provident_total, y_toll_total, y_toll_remark, y_social_enterprise_d,
        y_social_personal_d, y_social_total_d, y_provident_enterprise_d, y_provident_personal_d,
        y_provident_total_d, y_social_enterprise_t, y_social_personal_t, y_social_total_t,
        y_provident_enterprise_t, y_provident_personal_t, y_provident_total_t, social_provident_total,
        total_charge, vat_tax, total_welfare_products, risk_manage_fee, outsourcing_manage_fee, business_tax,
        relation_enquiry_receivable, is_lock, whether_compare, bill_year, whether_define,
        relation_employee_files, whether_difference_data, service_fee, salesman, business_unit, employee_nature,
        business_type, tax, paid_wages, charge_type, enterprise_payment, individual_payment)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id}, #{item.name}, #{item.creater}, #{item.createdDeptId},
            #{item.owner},#{item.ownerDeptId},
            #{item.createdTime}, #{item.modifier}, #{item.modifiedTime}, #{item.workflowInstanceId},
            #{item.sequenceNo}, #{item.sequenceStatus}, #{item.ownerDeptQueryCode},
            #{item.supplier}, #{item.businessYear}, #{item.clientName}, #{item.employeeName}, #{item.idNo}, #{item.uniqueNum}, #{item.delegatedArea},
            #{item.pensionEnterpriseBase}, #{item.pensionEnterpriseRatio}, #{item.pensionEnterpriseAttach}, #{item.pensionEnterprisePay},
            #{item.pensionPersonalBase}, #{item.pensionPersonalRatio}, #{item.pensionPersonalAttach}, #{item.pensionPersonalPay},
            #{item.pensionSubtotal}, #{item.pensionPaymentMethod}, #{item.medicalEnterpriseBase}, #{item.medicalEnterpriseRatio},
            #{item.medicalEnterpriseAttach}, #{item.medicalEnterprisePay}, #{item.medicalPersonalBase}, #{item.medicalPersonalRatio},
            #{item.medicalPersonalAttach}, #{item.medicalPersonalPay}, #{item.medicalSubtotal}, #{item.medicalPaymentMethod},
            #{item.unempEnterpriseBase}, #{item.unempEnterpriseRatio}, #{item.unempEnterpriseAttach}, #{item.unempEnterprisePay},
            #{item.unempPersonalBase}, #{item.unempPersonalRatio}, #{item.unempPersonalAttach}, #{item.unempPersonalPay},
            #{item.unempSubtotal}, #{item.unempPaymentMethod}, #{item.injuryEnterpriseBase}, #{item.injuryEnterpriseRatio},
            #{item.injuryEnterpriseAttach}, #{item.injuryEnterprisePay}, #{item.injurySubtotal}, #{item.injuryPaymentMethod},
            #{item.fertilityEnterpriseBase}, #{item.fertilityEnterpriseRatio}, #{item.fertilityEnterpriseAttach},
            #{item.fertilityEnterprisePay}, #{item.fertilitySubtotal}, #{item.fertilityPaymentMethod}, #{item.dMedicalEnterpriseBase},
            #{item.dMedicalEnterpriseRatio}, #{item.dMedicalEnterpriseAttach}, #{item.dMedicalEnterprisePay},
            #{item.dMedicalPersonalBase}, #{item.dMedicalPersonalRatio}, #{item.dMedicalPersonalAttach}, #{item.dMedicalPersonalPay},
            #{item.dMedicalSubtotal}, #{item.dMedicalPaymentMethod}, #{item.complexEnterpriseBase}, #{item.complexEnterpriseRatio},
            #{item.complexEnterpriseAttach}, #{item.complexEnterprisePay}, #{item.complexPersonalBase}, #{item.complexPersonalRatio},
            #{item.complexPersonalAttach}, #{item.complexPersonalPay}, #{item.complexSubtotal}, #{item.complexPaymentMethod},
            #{item.bInjuryEnterpriseBase}, #{item.bInjuryEnterpriseRatio}, #{item.bInjuryEnterpriseAttach},
            #{item.bInjuryEnterprisePay}, #{item.bInjurySubtotal}, #{item.bInjuryPaymentMethod}, #{item.socialSecurityEnterprise},
            #{item.socialSecurityPersonal}, #{item.socialSecurityTotal}, #{item.providentEnterpriseBase}, #{item.providentEnterpriseRatio},
            #{item.providentEnterprisePay}, #{item.providentPersonalBase}, #{item.providentPersonalRatio}, #{item.providentPersonalPay},
            #{item.providentSubtotal}, #{item.providentPaymentMethod}, #{item.bProvidentEnterpriseBase}, #{item.bProvidentEnterpriseRatio},
            #{item.bProvidentEnterprisePay}, #{item.bProvidentPersonalBase}, #{item.bProvidentPersonalRatio},
            #{item.bProvidentPersonalPay}, #{item.bProvidentSubtotal}, #{item.bProvidentPaymentMethod}, #{item.providentEnterprise},
            #{item.providentPersonal}, #{item.providentTotal}, #{item.yTollTotal}, #{item.yTollRemark}, #{item.ySocialEnterpriseD},
            #{item.ySocialPersonalD}, #{item.ySocialTotalD}, #{item.yProvidentEnterpriseD}, #{item.yProvidentPersonalD},
            #{item.yProvidentTotalD}, #{item.ySocialEnterpriseT}, #{item.ySocialPersonalT}, #{item.ySocialTotalT},
            #{item.yProvidentEnterpriseT}, #{item.yProvidentPersonalT}, #{item.yProvidentTotalT}, #{item.socialProvidentTotal},
            #{item.totalCharge}, #{item.vatTax}, #{item.totalWelfareProducts}, #{item.riskManageFee}, #{item.outsourcingManageFee}, #{item.businessTax},
            #{item.relationEnquiryReceivable}, #{item.isLock}, #{item.whetherCompare}, #{item.billYear}, #{item.whetherDefine},
            #{item.relationEmployeeFiles}, #{item.whetherDifferenceData}, #{item.serviceFee}, #{item.salesman}, #{item.businessUnit}, #{item.employeeNature},
            #{item.businessType}, #{item.tax}, #{item.paidWages}, #{item.chargeType}, #{item.enterprisePayment}, #{item.individualPayment})
        </foreach>
    </insert>

</mapper>